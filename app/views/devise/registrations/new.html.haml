:css
  h2 { font-size: 22px; }
  h3 { margin-top: 0; }
  label { font-weight: bold; }
  .field_with_errors {
    @extend .control-group !optional;
    @extend .error;
   }

.col-sm-8.field

  - if @ride_zone.present?
    %div{style: "font-size: 18px; font-weight: bold;"}
      #{t(:will_drive)} for
    %h3
      = @ride_zone.name

  - else
    %h3
      - if @volunteer.present?
        #{t(:will_drive)}!
      - else
        New User

  -# %div{style: 'margin-bottom: 0;'}
  -#  = t(:will_drive_signup_description)

= form_for(resource, as: resource_name, url: registration_path(resource_name), html: {autocomplete: "off"}) do |f|
  - if @volunteer
    = f.hidden_field :user_type
    = f.hidden_field :ride_zone_id

  - if devise_error_messages!.present?
    .col-sm-8
      = devise_error_messages!

  .col-sm-8.field
    = f.label :name, "#{t(:name)} *"
    = f.text_field :name, class: 'form-control', required: 'true', autofocus: true, maxlength: 100

  .col-sm-8.field
    = f.label :email, "Email *"
    = f.email_field :email, class: 'form-control', required: 'true', maxlength: 50

  .col-sm-8.field
    = f.label :phone_number, "#{t(:phone_number)} *"
    = f.telephone_field :phone_number, class: 'form-control', required: 'true', maxlength: 17

  .col-sm-8.field
    = f.label :description, "#{t(:vehicle_description)} *"
    = f.text_field :description, class: 'form-control', required: 'true', maxlength: 50

  - unless @ride_zone.present?
    .col-sm-8.field
      %label{for: 'user_city_state'}
        %div
          #{t(:city_and_state)}*
          - if @volunteer
            %div{style: "line-height: 22px; margin-bottom: 0px;"}
              %i
                Where you want to volunteer. Enter a location in #{User::VALID_STATES.map{|s| s[0]}.to_sentence(last_word_connector: ', or ')}.

      = f.text_field :city_state, class: 'form-control', required: 'true', autocomplete: :off, maxlength: 40

      = f.hidden_field :city, :value => ''
      = f.hidden_field :state, :value => ''

  .col-sm-8.field
    = f.label :password
    - if @minimum_password_length
      %em
        (#{@minimum_password_length} characters minimum)
    %br/
    = f.password_field :password, autocomplete: "off", class: 'form-control', required: 'true'

  .col-sm-8.field
    = f.submit t(:volunteer_to_drive), class: 'btn btn-primary', style: 'width: 100%; margin: 10px 0 0 0', disable_with: "#{t(:saving)}..."

    .small{style: 'margin-top: -10px 0 0 0;'}
      By saving you are agreeing to the #{link_to t(:terms_of_service), terms_of_service_path, target: '_blank'}.
    %br

:javascript
  $( function() {
    locationAutocomplete.attach('#user_city_state', '#user_city', '#user_state');
  });
